-- 독서실 회원 테이블 -----------------------------------------
CREATE TABLE STUDYROOM_MEMBER (
	MEMBER_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MEMBER_ID VARCHAR(15) UNIQUE NOT NULL
	, MEMBER_PW VARCHAR(50) NOT NULL
	, MEMBER_NAME VARCHAR(10) NOT NULL
	, MEMBER_TEL VARCHAR(13) NOT NULL
	, MEMBER_BIRTH DATETIME 
	, MEMBER_ADDR VARCHAR(50) NOT NULL
	, MEMBER_DETAIL VARCHAR(50)
	, MEMBER_GENDER VARCHAR(2)
	, IS_ADMIN VARCHAR(10) DEFAULT 'USER'   -- 'USER', 'ADMIN', 'ARBEIT'
);


SELECT * FROM studyroom_member;
ALTER TABLE studyroom_member ADD COLUMN  POST_CODE VARCHAR(10) AFTER MEMBER_BIRTH;
ALTER TABLE studyroom_member CHANGE MEMBER_DETAIL ADDR_DETAIL VARCHAR(50);
ALTER TABLE studyroom_member ADD COLUMN MEMBER_EMAIL VARCHAR(50) NOT NULL AFTER MEMBER_TEL;

COMMIT;

-- 회원 예약 시스템 
CREATE TABLE STUDYROOM_RESERVATION(
	RESERVATION_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, SEAT_NUM INT REFERENCES STUDYROOM_SEAT (SEAT_NUM)
	, RESERVATION_DATE DATETIME NOT NULL
	, IS_RESERVATION VARCHAR(5) DEFAULT 'Y'   -- 'Y', 'N'
);

-- 입실, 퇴실(me)
CREATE TABLE STUDYROOM_INOUT(
	DAY_INPUT INT AUTO_INCREMENT PRIMARY KEY
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, IN_OUT VARCHAR(5)
);
DELETE FROM board 
WHERE BOARD_NUM > 10;
SELECT * FROM board;

SELECT * FROM studyroom_inout;
SELECT * FROM approval;

INSERT INTO approval (
	 approval_CODE
	,APPROVAL_FEE
	,MEMBER_CODE
	,CHARGE_CODE
	,COUPON_USE
) VALUES (
	 1
	,220000
	,2
	,3
	,'N'
);

SELECT IN_OUT 
FROM studyroom_inout
WHERE MEMBER_CODE = '2';
-- 결제
CREATE TABLE APPROVAL(
	APPROVAL_CODE INT AUTO_INCREMENT PRIMARY KEY
	, APPROVAL_FEE INT NOT NULL -- 결제금액 
	, APPROVAL_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, CHARGE_CODE INT REFERENCES studyroom_charge (CHARGE_CODE)
	, COUPON_USE VARCHAR(5) DEFAULT 'Y'   -- 'Y', 'N'
);

ALTER TABLE APPROVAL ADD COLUMN APPROVAL_FEE INT NOT NULL AFTER APPROVAL_CODE;


SELECT * FROM STUDYROOM_SEAT;


CREATE TABLE COUPON(
   COUPON_CODE INT AUTO_INCREMENT PRIMARY KEY -- 쿠폰 종류의 코드
   , COUPON_NAME VARCHAR(50) NOT NULL
   , DISCOUNT_PERCENT INT NOT NULL -- % 제외한 할인율만 입력
);

ALTER TABLE APPROVAL CHANGE CARD COUPON_USE VARCHAR(5) DEFAULT 'N';

CREATE TABLE MEMBER_COUPON(
   OWN_COUPON_CODE INT AUTO_INCREMENT PRIMARY KEY -- 회원에게 나눠진 쿠폰 코드
   , COUPON_CODE INT REFERENCES COUPON (COUPON_CODE) -- 쿠폰 종류 코드
   , MEMBER_CODE INT REFERENCES studyroom_member (MEMBER_CODE)
);

-- 좌석 시스템 ---------------------------------------------------------
CREATE TABLE STUDYROOM_SEAT (
	SEAT_NUM INT AUTO_INCREMENT PRIMARY KEY
	, SEAT_POWER VARCHAR(10) DEFAULT 'OFF' -- (ON,OFF)
	, SEAT_FLOOR INT DEFAULT 1 NOT NULL -- (1 , 2)
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE)
	, STATUS_NUM INT DEFAULT 2 REFERENCES seat_status (STATUS_NUM)
	, AGE_CODE INT DEFAULT 1 REFERENCES floor_age (AGE_CODE)
);

-- 좌석 상태
CREATE TABLE SEAT_STATUS (
	STATUS_NUM INT AUTO_INCREMENT PRIMARY KEY
	, STATUS_NAME VARCHAR(20) NOT NULL UNIQUE
);
SELECT * FROM seat_status;
INSERT INTO SEAT_STATUS VALUES(1, '사용중');
INSERT INTO SEAT_STATUS VALUES(2, '사용가능');
INSERT INTO SEAT_STATUS VALUES(3, '수리중');

-- 좌석 사용 나이별 
CREATE TABLE FLOOR_AGE (
	AGE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, AGE_NAME VARCHAR(15) NOT NULL
);

INSERT INTO FLOOR_AGE VALUES(1, '20세 미만');
INSERT INTO FLOOR_AGE VALUES(2, '20세 이상');

-- 좌석 상태 insert
INSERT INTO studyroom_seat VALUES (59, 'OFF', 2, null, 2, 2);
COMMIT;

-- 관리자 ----------------------------------------------



-- 요금제 
CREATE TABLE STUDYROOM_CHARGE (
	CHARGE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, CHARGE_NAME VARCHAR(10) NOT NULL
	, CHARGE_FEE INT NOT NULL
	, CHARGE_DATE INT NOT NULL
);

DROP TABLE studyroom_charge;
ALTER TABLE STUDYROOM_CHARGE CHANGE CHARGE_NAME CHARGE_NAME VARCHAR(50) NOT NULL;
INSERT INTO studyroom_charge VALUES(1, '30일', 220000, 30);
INSERT INTO STUDYROOM_CHARGE VALUES(2, '21일', 180000, 21);
INSERT INTO STUDYROOM_CHARGE VALUES(3, '14일', 130000, 14);
INSERT INTO STUDYROOM_CHARGE VALUES(4, '7일', 70000, 7);
INSERT INTO STUDYROOM_CHARGE VALUES(5, '1일', 10000, 1);approval

-- 독서실 게시판 테이블 ---------------------------------------------------
CREATE TABLE STUDYROOM_BOARD (
	BOARD_CODE INT AUTO_INCREMENT PRIMARY KEY
	, BOARD_TITLE VARCHAR(20) NOT NULL
	, BOARD_WRITER VARCHAR(15) NOT NULL REFERENCES studyroom_member (MEMBER_ID) 
	, BOARD_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, BOARD_CONTENT VARCHAR(200) NOT NULL
	, BOARD_SECRET VARCHAR(10) DEFAULT 'NO' -- YES : 비밀글 , NO : 공개글 
	, BOARD_ANSWER VARCHAR(10) DEFAULT 'NO' -- YES : 답변 o , NO : 답변 x 
);
INSERT INTO studyroom_board (BOARD_TITLE, BOARD_WRITER , BOARD_CONTENT )VALUES ( 'ASAD' , 'HONG', 'ASDASDASD');

ALTER TABLE studyroom_board ADD BOARD_ANSWER VARCHAR(10) DEFAULT 'NO';
ALTER TABLE studyroom_board DROP COLUMN READ_CNT;

SELECT * FROM studyroom_board;
-- 독서실 게시판 댓글 테이블
CREATE TABLE STUDYROOM_COMMENT (
	COMMENT_CODE INT AUTO_INCREMENT PRIMARY KEY
	,	COMMENT_WRITER VARCHAR(20) NOT NULL 
	, 	COMMENT_CONTENT VARCHAR(200) NOT NULL
	,	COMMENT_DATE DATETIME DEFAULT CURRENT_TIMESTAMP 
	, 	BOARD_CODE INT NOT NULL REFERENCES STUDYROOM_BOARD (BOARD_CODE)
);

DROP TABLE studyroom_board;
SELECT * FROM studyroom_comment;

-- 게시판 이미지 관리 테이블 
CREATE TABLE BOARD_IMG (
	IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	, ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	, BOARD_CODE INT NOT NULL REFERENCES STUDYROOM_BOARD (BOARD_CODE)
);

ALTER TABLE BOARD_IMG 
ADD FOREIGN KEY (BOARD_CODE) 
REFERENCES STUDYROOM_BOARD (BOARD_CODE)
ON DELETE CASCADE;

ALTER TABLE STUDYROOM_COMMENT 
ADD FOREIGN KEY (BOARD_CODE) 
REFERENCES STUDYROOM_BOARD (BOARD_CODE)
ON DELETE CASCADE;

COMMIT;

SELECT * FROM BOARD_IMG;

-- 
CREATE TABLE SALES_INFO(
	SALES_CODE INT AUTO_INCREMENT PRIMARY KEY
	, SALES_FEE INT NOT NULL
	, SALES_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, CHARGE_CODE INT REFERENCES studyroom_charge (CHARGE_CODE)
);

-- 리뷰 
CREATE TABLE REVIEW(
	REVIEW_CODE INT AUTO_INCREMENT PRIMARY KEY
	, REVIEW_WRITER VARCHAR(20) NOT NULL REFERENCES studyroom_member (MEMBER_ID)
	, REVIEW_CONTENT VARCHAR(200) NOT NULL 
	, REVIEW_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 관리자 회원 메세지
CREATE TABLE studyroom_message (
	MESSAGE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MESSAGE_CONTENT VARCHAR(300) NOT NULL
	, MESSAGE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
	, TO_FROM VARCHAR(10) DEFAULT 'TO'
	, MEMBER_CODE INT REFERENCES STUDYROOM_MEMBER (MEMBER_CODE) -- FK
);

SELECT * FROM REVIEW;


SELECT REVIEW_CODE
   , LEFT(REVIEW_WRITER, 2) REVIEW_WRITER
   , REVIEW_CONTENT
   , DATE_FORMAT(REVIEW_DATE, '%Y-%m-%d') REVIEW_DATE
FROM REVIEW;

SELECT REVIEW_CODE
      , RPAD(SUBSTRING(REVIEW_WRITER,1,2), 5 ,'*') REVIEW_WRITER
      , REVIEW_CONTENT
      , DATE_FORMAT(REVIEW_DATE, '%Y-%m-%d') REVIEW_DATE
FROM REVIEW;

SELECT BOARD_CODE
            , BOARD_TITLE
            , DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') BOARD_DATE
            , BOARD_WRITER
            , BOARD_SECRET
            , BOARD_CONTENT
            , BOARD_ANSWER
        FROM STUDYROOM_BOARD
        ORDER BY BOARD_CODE DESC
		  LIMIT 3;
		  
		  
SELECT BOARD_CODE
            , BOARD_TITLE
            , DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') BOARD_DATE
            , BOARD_WRITER
            , BOARD_SECRET
            , BOARD_CONTENT
            , BOARD_ANSWER
        FROM STUDYROOM_BOARD
        ORDER BY BOARD_CODE DESC
        LIMIT 5 OFFSET 5 * (1-1);
        
        
SELECT BOARD.BOARD_CODE
            , BOARD_TITLE
            , BOARD_WRITER
            , BOARD_CONTENT
            , DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') BOARD_DATE
            , ATTACHED_FILE_NAME
        FROM STUDYROOM_BOARD BOARD 
		  LEFT OUTER JOIN BOARD_IMG IMG
        ON BOARD.BOARD_CODE = IMG.BOARD_CODE
        WHERE BOARD.BOARD_CODE = 32;        
		  